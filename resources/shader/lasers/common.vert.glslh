
#include "../lib/render_context.glslh"
#include "../lib/util.glslh"
#include "../interface/standard.glslh"

UNIFORM(1) vec2 origin;
UNIFORM(2) float timeshift;
UNIFORM(3) float width;
UNIFORM(4) float width_exponent;
UNIFORM(5) int span;
UNIFORM(6) vec2 args[4];

vec2 pos_rule(float t);

#include "vertex_pos.glslh"

void main(void) {
	vec2 p = pos_rule(gl_InstanceID * 0.5 + timeshift);
	vec2 d = p - pos_rule(gl_InstanceID * 0.5 + timeshift - 0.1);

	vec2 pos     = laser_vertex_pos(p, d);
	gl_Position  = r_modelViewMatrix * r_projectionMatrix * vec4(pos, 0.0, 1.0);
	texCoord     = (r_textureMatrix * vec4(texCoordRawIn, 0.0, 1.0)).xy;
	texCoordRaw  = texCoordRawIn;
}
