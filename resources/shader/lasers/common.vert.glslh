
#include "../lib/render_context.glslh"
#include "../lib/util.glslh"

layout(location = 0) in vec2 position;
layout(location = 1) in vec2 texCoordRawIn;

out vec2 texCoord;
out vec2 texCoordRaw;

uniform vec2 origin;
uniform float timeshift;
uniform float width;
uniform float width_exponent;
uniform int span;
uniform vec2 args[4];

vec2 pos_rule(float t);

#include "vertex_pos.glslh"

void main(void) {
	vec2 p = pos_rule(gl_InstanceID * 0.5 + timeshift);
	vec2 d = p - pos_rule(gl_InstanceID * 0.5 + timeshift - 0.1);

	vec2 pos     = laser_vertex_pos(p, d);
	gl_Position  = ctx.modelViewMatrix * ctx.projectionMatrix * vec4(pos, 0.0, 1.0);
	texCoord     = (ctx.textureMatrix * vec4(texCoordRawIn, 0.0, 1.0)).xy;
	texCoordRaw  = texCoordRawIn;
}
